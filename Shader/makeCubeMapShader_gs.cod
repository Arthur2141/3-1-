//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CBPerCubeMap
// {
//
//   float4x4 ViewMat[6];               // Offset:    0 Size:   384
//   float4x4 Projection;               // Offset:  384 Size:    64
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// CBPerCubeMap                      cbuffer      NA          NA            cb3      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// COLOR                    0   xyzw        3     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xy          4     NONE   float   xy  
// SV_RenderTargetArrayIndex     0   x           5  RTINDEX    uint   x   
//
gs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB3[28], dynamicIndexed
dcl_input_siv v[3][0].xyzw, position
dcl_input v[3][1].xyz
dcl_input v[3][2].xy
dcl_input v[3][3].xyzw
dcl_temps 3
dcl_inputprimitive triangle 
dcl_stream m0
dcl_outputtopology trianglestrip 
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyz
dcl_output o3.xyz
dcl_output o4.xy
dcl_output_siv o5.x, rendertarget_array_index
dcl_maxout 18
mov r0.x, l(0)
loop 
  ige r0.y, r0.x, l(6)
  breakc_nz r0.y
  ishl r0.y, r0.x, l(2)
  mov r0.z, l(0)
  loop 
    ige r0.w, r0.z, l(3)
    breakc_nz r0.w
    mul r1.xyzw, cb3[r0.y + 1].xyzw, v[r0.z + 0][0].yyyy
    mad r1.xyzw, cb3[r0.y + 0].xyzw, v[r0.z + 0][0].xxxx, r1.xyzw
    mad r1.xyzw, cb3[r0.y + 2].xyzw, v[r0.z + 0][0].zzzz, r1.xyzw
    mad r1.xyzw, cb3[r0.y + 3].xyzw, v[r0.z + 0][0].wwww, r1.xyzw
    mul r2.xyzw, r1.yyyy, cb3[25].xyzw
    mad r2.xyzw, cb3[24].xyzw, r1.xxxx, r2.xyzw
    mad r2.xyzw, cb3[26].xyzw, r1.zzzz, r2.xyzw
    mad r1.xyzw, cb3[27].xyzw, r1.wwww, r2.xyzw
    dp3 r0.w, v[r0.z + 0][1].xyzx, v[r0.z + 0][1].xyzx
    rsq r0.w, r0.w
    mul r2.xyz, r0.wwww, v[r0.z + 0][1].xyzx
    mov o0.xyzw, r1.xyzw
    mov o1.xyzw, v[r0.z + 0][3].xyzw
    mov o2.xyz, r2.xyzx
    mov o3.xyz, l(0,0,0,0)
    mov o4.xy, v[r0.z + 0][2].xyxx
    mov o5.x, r0.x
    emit_stream m0
    iadd r0.z, r0.z, l(1)
  endloop 
  cut_stream m0
  iadd r0.x, r0.x, l(1)
endloop 
ret 
// Approximately 33 instruction slots used
