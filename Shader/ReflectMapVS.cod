//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CbScene
// {
//
//   row_major float4x4 viewProjection; // Offset:    0 Size:    64
//   float4 lightDirection;             // Offset:   64 Size:    16
//   float4 viewPosition;               // Offset:   80 Size:    16 [unused]
//   float4 param;                      // Offset:   96 Size:    16 [unused]
//
// }
//
// cbuffer CbMesh
// {
//
//   row_major float4x4 boneTransforms[128];// Offset:    0 Size:  8192
//
// }
//
// cbuffer CbSubset
// {
//
//   float4 materialColor;              // Offset:    0 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// CbScene                           cbuffer      NA          NA            cb0      1 
// CbMesh                            cbuffer      NA          NA            cb1      1 
// CbSubset                          cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyz         2     NONE   float       
// TEXCOORD                 0   xy          3     NONE   float   xy  
// COLOR                    0   xyzw        4     NONE   float   xyzw
// WEIGHTS                  0   xyzw        5     NONE   float   xyzw
// BONES                    0   xyzw        6     NONE    uint   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// POSITION                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy  
// COLOR                    0   xyzw        3     NONE   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000},
                              { -1, 0, 0, 0},
                              { 0, -1, 0, 0},
                              { 0, 0, -1, 0},
                              { 0, 0, 0, -1} }
dcl_constantbuffer CB0[5], immediateIndexed
dcl_constantbuffer CB1[512], dynamicIndexed
dcl_constantbuffer CB2[1], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyz
dcl_input v3.xy
dcl_input v4.xyzw
dcl_input v5.xyzw
dcl_input v6.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xy
dcl_output o3.xyzw
dcl_temps 7
//
// Initial variable locations:
//   v0.x <- position.x; v0.y <- position.y; v0.z <- position.z; v0.w <- position.w; 
//   v1.x <- normal.x; v1.y <- normal.y; v1.z <- normal.z; 
//   v2.x <- tangent.x; v2.y <- tangent.y; v2.z <- tangent.z; 
//   v3.x <- texcoord.x; v3.y <- texcoord.y; 
//   v4.x <- color.x; v4.y <- color.y; v4.z <- color.z; v4.w <- color.w; 
//   v5.x <- boneWeights.x; v5.y <- boneWeights.y; v5.z <- boneWeights.z; v5.w <- boneWeights.w; 
//   v6.x <- boneIndices.x; v6.y <- boneIndices.y; v6.z <- boneIndices.z; v6.w <- boneIndices.w; 
//   o3.x <- <main return value>.color.x; o3.y <- <main return value>.color.y; o3.z <- <main return value>.color.z; o3.w <- <main return value>.color.w; 
//   o2.x <- <main return value>.texcoord.x; o2.y <- <main return value>.texcoord.y; 
//   o1.x <- <main return value>.wposition.x; o1.y <- <main return value>.wposition.y; o1.z <- <main return value>.wposition.z; o1.w <- <main return value>.wposition.w; 
//   o0.x <- <main return value>.position.x; o0.y <- <main return value>.position.y; o0.z <- <main return value>.position.z; o0.w <- <main return value>.position.w
//
#line 14 "C:\Users\2230273\OneDrive - yamaguchigakuen\チEクトップ\ゲームプログラミング\ゲームプログラミングⅢ・Ⅳ(20231204)Particle\HLSL\ReflectMapVS.hlsl"
itof r0.xyz, l(0, 0, 0, 0)  // r0.x <- p.x; r0.y <- p.y; r0.z <- p.z

#line 15
itof r1.xyz, l(0, 0, 0, 0)  // r1.x <- n.x; r1.y <- n.y; r1.z <- n.z

#line 16
mov r0.w, l(0)  // r0.w <- i
mov r2.xyz, r0.xyzx  // r2.x <- p.x; r2.y <- p.y; r2.z <- p.z
mov r3.xyz, r1.xyzx  // r3.x <- n.x; r3.y <- n.y; r3.z <- n.z
mov r1.w, r0.w  // r1.w <- i
loop 
  ilt r3.w, r1.w, l(4)
  breakc_z r3.w

#line 18
  dp4 r3.w, v5.xyzw, icb[r1.w + 0].xyzw
  and r4.xyzw, v6.xyzw, icb[r1.w + 4].xyzw
  or r4.xy, r4.ywyy, r4.xzxx
  or r4.x, r4.y, r4.x
  imul null, r4.x, r4.x, l(4)
  mul r4.yzw, v0.xxxx, cb1[r4.x + 0].xxyz
  mul r5.xyz, v0.yyyy, cb1[r4.x + 1].xyzx
  add r4.yzw, r4.yyzw, r5.xxyz
  mul r5.xyz, v0.zzzz, cb1[r4.x + 2].xyzx
  add r4.yzw, r4.yyzw, r5.xxyz
  mul r5.xyz, v0.wwww, cb1[r4.x + 3].xyzx
  add r4.xyz, r4.yzwy, r5.xyzx
  mul r4.xyz, r3.wwww, r4.xyzx
  add r2.xyz, r2.xyzx, r4.xyzx

#line 19
  dp4 r3.w, v5.xyzw, icb[r1.w + 0].xyzw
  itof r4.x, l(0)
  and r5.xyzw, v6.xyzw, icb[r1.w + 4].xyzw
  or r4.yz, r5.yywy, r5.xxzx
  or r4.y, r4.z, r4.y
  imul null, r4.y, r4.y, l(4)
  mul r5.xyz, v1.xxxx, cb1[r4.y + 0].xyzx
  mul r6.xyz, v1.yyyy, cb1[r4.y + 1].xyzx
  add r5.xyz, r5.xyzx, r6.xyzx
  mul r6.xyz, v1.zzzz, cb1[r4.y + 2].xyzx
  add r5.xyz, r5.xyzx, r6.xyzx
  mul r4.xyz, r4.xxxx, cb1[r4.y + 3].xyzx
  add r4.xyz, r4.xyzx, r5.xyzx
  mul r4.xyz, r3.wwww, r4.xyzx
  add r3.xyz, r3.xyzx, r4.xyzx

#line 20
  iadd r1.w, r1.w, l(1)
endloop 

#line 23
mov r2.xyz, r2.xyzx  // r2.x <- P.x; r2.y <- P.y; r2.z <- P.z
mov r2.w, l(1.000000)  // r2.w <- P.w

#line 24
mul r0.xyzw, r2.xxxx, cb0[0].xyzw
mul r1.xyzw, r2.yyyy, cb0[1].xyzw
add r0.xyzw, r0.xyzw, r1.xyzw
mul r1.xyzw, r2.zzzz, cb0[2].xyzw
add r0.xyzw, r0.xyzw, r1.xyzw
mul r1.xyzw, r2.wwww, cb0[3].xyzw
add r0.xyzw, r0.xyzw, r1.xyzw  // r0.x <- vout.position.x; r0.y <- vout.position.y; r0.z <- vout.position.z; r0.w <- vout.position.w

#line 25
mov r2.xyzw, r2.xyzw  // r2.x <- vout.wposition.x; r2.y <- vout.wposition.y; r2.z <- vout.wposition.z; r2.w <- vout.wposition.w

#line 26
dp3 r1.x, r3.xyzx, r3.xyzx
rsq r1.x, r1.x
mul r1.xyz, r1.xxxx, r3.xyzx  // r1.x <- N.x; r1.y <- N.y; r1.z <- N.z

#line 27
mov r3.xyz, -cb0[4].xyzx
dp3 r1.w, r3.xyzx, r3.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, r3.xyzx  // r3.x <- L.x; r3.y <- L.y; r3.z <- L.z

#line 28
dp3 r1.x, r3.xyzx, r1.xyzx  // r1.x <- d

#line 29
itof r1.y, l(0)
max r1.x, r1.x, r1.y
mul r1.x, r1.x, l(0.500000)
add r1.x, r1.x, l(0.500000)  // r1.x <- power

#line 30
mul r1.yzw, v4.xxyz, cb2[0].xxyz
mul r1.xyz, r1.xxxx, r1.yzwy  // r1.x <- vout.color.x; r1.y <- vout.color.y; r1.z <- vout.color.z

#line 31
mul r1.w, v4.w, cb2[0].w  // r1.w <- vout.color.w

#line 32
mov r3.xy, v3.xyxx  // r3.x <- vout.texcoord.x; r3.y <- vout.texcoord.y

#line 34
mov o0.xyzw, r0.xyzw
mov o1.xyzw, r2.xyzw
mov o3.xyz, r1.xyzx
mov o3.w, r1.w
mov o2.xy, r3.xyxx
ret 
// Approximately 72 instruction slots used
