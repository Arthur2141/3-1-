//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CbScene
// {
//
//   row_major float4x4 viewProjection; // Offset:    0 Size:    64 [unused]
//   float4 lightDirection;             // Offset:   64 Size:    16
//   float4 viewPosition;               // Offset:   80 Size:    16
//   row_major float4x4 shadowViewProjection;// Offset:   96 Size:    64 [unused]
//   float4 param;                      // Offset:  160 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// diffuseMapSamplerState            sampler      NA          NA             s0      1 
// EnvMap                            texture  float4          2d             t2      1 
// NormalMap                         texture  float4          2d             t3      1 
// CbScene                           cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// POSITION                 0   xyz         1     NONE   float   xyz 
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xy          3     NONE   float   xy  
// COLOR                    0   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[11], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xy
dcl_output o0.xyzw
dcl_temps 5
dp3 r0.x, v2.xyzx, v2.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, v2.xyzx
add r1.xyz, -v1.xyzx, cb0[5].xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3 r0.w, -r1.xyzx, r0.xyzx
add r0.w, r0.w, r0.w
mad r0.xyz, r0.xyzx, -r0.wwww, -r1.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
max r0.w, |r1.x|, |r0.z|
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
min r1.w, |r1.x|, |r0.z|
mul r0.w, r0.w, r1.w
mul r1.w, r0.w, r0.w
mad r2.x, r1.w, l(0.020835), l(-0.085133)
mad r2.x, r1.w, r2.x, l(0.180141)
mad r2.x, r1.w, r2.x, l(-0.330299)
mad r1.w, r1.w, r2.x, l(0.999866)
mul r2.x, r0.w, r1.w
mad r2.x, r2.x, l(-2.000000), l(1.570796)
lt r2.y, |r1.x|, |r0.z|
and r2.x, r2.y, r2.x
mad r0.w, r0.w, r1.w, r2.x
lt r1.w, r1.x, -r1.x
and r1.w, r1.w, l(0xc0490fdb)
add r0.w, r0.w, r1.w
min r1.w, r1.x, r0.z
lt r1.w, r1.w, -r1.w
max r2.x, r1.x, r0.z
ge r2.x, r2.x, -r2.x
and r1.w, r1.w, r2.x
movc r0.w, r1.w, -r0.w, r0.w
mad r0.w, -r0.w, l(0.500000), l(0.570000)
mad r2.x, -r0.w, l(0.318310), l(0.500000)
mad r3.xyzw, cb0[10].xxxx, l(0.005000, 0.001000, -0.001000, -0.005000), v3.xyxy
sample_indexable(texture2d)(float,float,float,float) r4.xyz, r3.xyxx, t3.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r3.xyz, r3.zwzz, t3.xyzw, s0
add r3.xyz, r3.xzyx, l(-0.500000, -0.500000, -0.500000, 0.000000)
add r4.xyz, r4.xzyx, l(-0.500000, -0.500000, -0.500000, 0.000000)
add r4.xyz, r4.xyzx, r4.xyzx
mad r3.xyz, r3.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r4.xyzx
dp3 r0.w, r3.xyzx, r3.xyzx
rsq r0.w, r0.w
mul r3.xyz, r0.wwww, r3.xyzx
dp2 r0.x, r0.xzxx, r0.xzxx
sqrt r0.x, r0.x
max r0.z, r0.x, |r0.y|
div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
min r0.w, r0.x, |r0.y|
mul r0.z, r0.z, r0.w
mul r0.w, r0.z, r0.z
mad r1.w, r0.w, l(0.020835), l(-0.085133)
mad r1.w, r0.w, r1.w, l(0.180141)
mad r1.w, r0.w, r1.w, l(-0.330299)
mad r0.w, r0.w, r1.w, l(0.999866)
mul r1.w, r0.w, r0.z
mad r1.w, r1.w, l(-2.000000), l(1.570796)
lt r2.z, r0.x, |r0.y|
and r1.w, r1.w, r2.z
mad r0.z, r0.z, r0.w, r1.w
min r0.w, r0.x, r0.y
max r0.x, r0.x, r0.y
ge r0.x, r0.x, -r0.x
lt r0.y, r0.w, -r0.w
and r0.x, r0.x, r0.y
movc r0.x, r0.x, -r0.z, r0.z
mad r2.y, r0.x, l(-0.318310), l(0.500000)
mad r0.xy, r3.xzxx, l(0.020000, 0.020000, 0.000000, 0.000000), r2.xyxx
sample_indexable(texture2d)(float,float,float,float) r0.xyz, r0.xyxx, t2.xyzw, s0
dp3 r0.w, cb0[4].xyzx, cb0[4].xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, cb0[4].xyzx
dp3 r0.w, r2.xyzx, r3.xyzx
add r0.w, r0.w, r0.w
mad r2.xyz, r3.xyzx, -r0.wwww, r2.xyzx
dp3 r0.w, r2.xyzx, r1.xyzx
max r0.w, r0.w, l(0.000000)
log r0.w, r0.w
mul r0.w, r0.w, l(36.000000)
exp r0.w, r0.w
mad o0.xyz, r0.xyzx, l(0.800000, 0.800000, 0.800000, 0.000000), r0.wwww
mov o0.w, l(0.800000)
ret 
// Approximately 87 instruction slots used
