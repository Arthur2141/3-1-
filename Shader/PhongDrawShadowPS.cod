//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CbScene
// {
//
//   row_major float4x4 viewProjection; // Offset:    0 Size:    64 [unused]
//   float4 lightDirection;             // Offset:   64 Size:    16
//   float4 viewPosition;               // Offset:   80 Size:    16
//   row_major float4x4 shadowViewProjection;// Offset:   96 Size:    64 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// diffuseMapSamplerState            sampler      NA          NA             s0      1 
// shadowMapSamplerState             sampler      NA          NA             s1      1 
// diffuseMap                        texture  float4          2d             t0      1 
// shadowMap                         texture  float4          2d             t1      1 
// CbScene                           cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// POSITION                 0   xyz         1     NONE   float   xyz 
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xy          3     NONE   float   xy  
// COLOR                    0   xyzw        4     NONE   float   xyzw
// TEXCOORD                 1   xyz         5     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB0[6], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xy
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyz
dcl_output o0.xyzw
dcl_temps 6
//
// Initial variable locations:
//   v0.x <- pin.position.x; v0.y <- pin.position.y; v0.z <- pin.position.z; v0.w <- pin.position.w; 
//   v1.x <- pin.wposition.x; v1.y <- pin.wposition.y; v1.z <- pin.wposition.z; 
//   v2.x <- pin.wnomal.x; v2.y <- pin.wnomal.y; v2.z <- pin.wnomal.z; 
//   v3.x <- pin.texcoord.x; v3.y <- pin.texcoord.y; 
//   v4.x <- pin.color.x; v4.y <- pin.color.y; v4.z <- pin.color.z; v4.w <- pin.color.w; 
//   v5.x <- pin.vTex.x; v5.y <- pin.vTex.y; v5.z <- pin.vTex.z; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 32 "C:\Users\2230273\Documents\3-1-\HLSL\PhongDrawShadow.hlsli"
mov r0.x, l(0.000800)  // r0.x <- Bias

#line 35
mov r0.yzw, l(0,0.700000,0.700000,0.700000)  // r0.y <- ShadowColor.x; r0.z <- ShadowColor.y; r0.w <- ShadowColor.z

#line 13 "C:\Users\2230273\Documents\3-1-\HLSL\PhongDrawShadowPS.hlsl"
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v3.xyxx, t0.xyzw, s0  // r1.x <- color.x; r1.y <- color.y; r1.z <- color.z; r1.w <- color.w

#line 14
mul r1.xyzw, r1.xyzw, v4.xyzw

#line 15
mov r2.xyz, -v1.xyzx
add r2.xyz, r2.xyzx, cb0[5].xyzx
dp3 r2.w, r2.xyzx, r2.xyzx
rsq r2.w, r2.w
mul r2.xyz, r2.wwww, r2.xyzx  // r2.x <- E.x; r2.y <- E.y; r2.z <- E.z

#line 16
dp3 r2.w, cb0[4].xyzx, cb0[4].xyzx
rsq r2.w, r2.w
mul r3.xyz, r2.wwww, cb0[4].xyzx  // r3.x <- L.x; r3.y <- L.y; r3.z <- L.z

#line 17
dp3 r2.w, v2.xyzx, v2.xyzx
rsq r2.w, r2.w
mul r4.xyz, r2.wwww, v2.xyzx  // r4.x <- N.x; r4.y <- N.y; r4.z <- N.z

#line 18
dp3 r2.w, r3.xyzx, r4.xyzx
add r2.w, r2.w, r2.w
mov r2.w, -r2.w
mul r5.xyz, r2.wwww, r4.xyzx
add r5.xyz, r3.xyzx, r5.xyzx  // r5.x <- R.x; r5.y <- R.y; r5.z <- R.z

#line 19
itof r2.w, l(0)
dp3 r2.x, r5.xyzx, r2.xyzx
max r2.x, r2.x, r2.w
itof r2.y, l(20)
log r2.x, r2.x
mul r2.x, r2.x, r2.y
exp r2.x, r2.x  // r2.x <- S

#line 20
add r1.xyz, r1.xyzx, r2.xxxx

#line 24
nop 
nop 
nop 
mov r2.xyz, v5.xyzx
mov r0.yzw, r0.yyzw
mov r0.x, r0.x

#line 58 "C:\Users\2230273\Documents\3-1-\HLSL\PhongDrawShadow.hlsli"
itof r2.w, l(2)
sample_l_indexable(texture2d)(float,float,float,float) r2.x, r2.xyxx, t1.xyzw, s1, r2.w
mov r2.x, r2.x  // r2.x <- d

#line 60
mov r2.x, -r2.x
add r2.x, r2.x, r2.z
lt r0.x, r0.x, r2.x
itof r2.xyz, l(1, 1, 1, 0)
movc r0.xyz, r0.xxxx, r0.yzwy, r2.xyzx  // r0.x <- Scolor.x; r0.y <- Scolor.y; r0.z <- Scolor.z

#line 61
mov r0.xyz, r0.xyzx  // r0.x <- <GetShadow return value>.x; r0.y <- <GetShadow return value>.y; r0.z <- <GetShadow return value>.z

#line 24 "C:\Users\2230273\Documents\3-1-\HLSL\PhongDrawShadowPS.hlsl"
mov r0.xyz, r0.xyzx  // r0.x <- shadowColor.x; r0.y <- shadowColor.y; r0.z <- shadowColor.z

#line 25
mov r2.xyz, -r3.xyzx
dp3 r0.w, r2.xyzx, r4.xyzx
itof r2.x, l(0)
lt r0.w, r2.x, r0.w
if_nz r0.w
  mul r1.xyz, r0.xyzx, r1.xyzx
endif 

#line 27
mov o0.xyz, r1.xyzx
mov o0.w, r1.w
ret 
// Approximately 54 instruction slots used
