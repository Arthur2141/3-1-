//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CbScene
// {
//
//   row_major float4x4 viewProjection; // Offset:    0 Size:    64 [unused]
//   float4 lightDirection;             // Offset:   64 Size:    16
//   float4 viewPosition;               // Offset:   80 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// diffuseMapSamplerState            sampler      NA          NA             s0      1 
// diffuseMap                        texture  float4          2d             t0      1 
// CbScene                           cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// POSITION                 0   xyz         1     NONE   float   xyz 
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xy          3     NONE   float   xy  
// COLOR                    0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB0[6], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xy
dcl_input_ps linear v4.xyzw
dcl_output o0.xyzw
dcl_temps 4
//
// Initial variable locations:
//   v0.x <- pin.position.x; v0.y <- pin.position.y; v0.z <- pin.position.z; v0.w <- pin.position.w; 
//   v1.x <- pin.wposition.x; v1.y <- pin.wposition.y; v1.z <- pin.wposition.z; 
//   v2.x <- pin.wnomal.x; v2.y <- pin.wnomal.y; v2.z <- pin.wnomal.z; 
//   v3.x <- pin.texcoord.x; v3.y <- pin.texcoord.y; 
//   v4.x <- pin.color.x; v4.y <- pin.color.y; v4.z <- pin.color.z; v4.w <- pin.color.w; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 9 "C:\Users\2220187\Desktop\ゲームプログラミングⅢ・Ⅳ(6_)コリジョンEEoonシェーダ作E"
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v3.xyxx, t0.xyzw, s0  // r0.x <- color.x; r0.y <- color.y; r0.z <- color.z; r0.w <- color.w

#line 10
mul r0.xyzw, r0.xyzw, v4.xyzw

#line 11
mov r1.xyz, v1.xyzx  // r1.x <- P.x; r1.y <- P.y; r1.z <- P.z

#line 12
mov r1.xyz, -r1.xyzx
add r1.xyz, r1.xyzx, cb0[5].xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r1.xyz, r1.wwww, r1.xyzx  // r1.x <- E.x; r1.y <- E.y; r1.z <- E.z

#line 13
dp3 r1.w, cb0[4].xyzx, cb0[4].xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, cb0[4].xyzx  // r2.x <- L.x; r2.y <- L.y; r2.z <- L.z

#line 14
dp3 r1.w, v2.xyzx, v2.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, v2.xyzx  // r3.x <- N.x; r3.y <- N.y; r3.z <- N.z

#line 15
dp3 r1.w, r2.xyzx, r3.xyzx
add r1.w, r1.w, r1.w
mov r1.w, -r1.w
mul r3.xyz, r1.wwww, r3.xyzx
add r2.xyz, r2.xyzx, r3.xyzx  // r2.x <- R.x; r2.y <- R.y; r2.z <- R.z

#line 16
itof r1.w, l(0)
dp3 r1.x, r2.xyzx, r1.xyzx
max r1.x, r1.x, r1.w
itof r1.y, l(20)
log r1.x, r1.x
mul r1.x, r1.x, r1.y
exp r1.x, r1.x  // r1.x <- S

#line 17
add r0.xyz, r0.xyzx, r1.xxxx

#line 18
mov o0.xyz, r0.xyzx
mov o0.w, r0.w
ret 
// Approximately 30 instruction slots used
